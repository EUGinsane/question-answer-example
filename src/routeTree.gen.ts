/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Activity2RouteImport } from './routes/activity-2'
import { Route as IndexRouteImport } from './routes/index'
import { Route as Activity1IndexRouteImport } from './routes/activity-1.index'
import { Route as Activity1IdRouteImport } from './routes/activity-1.$id'

const Activity2Route = Activity2RouteImport.update({
  id: '/activity-2',
  path: '/activity-2',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const Activity1IndexRoute = Activity1IndexRouteImport.update({
  id: '/activity-1/',
  path: '/activity-1/',
  getParentRoute: () => rootRouteImport,
} as any)
const Activity1IdRoute = Activity1IdRouteImport.update({
  id: '/activity-1/$id',
  path: '/activity-1/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/activity-2': typeof Activity2Route
  '/activity-1/$id': typeof Activity1IdRoute
  '/activity-1': typeof Activity1IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/activity-2': typeof Activity2Route
  '/activity-1/$id': typeof Activity1IdRoute
  '/activity-1': typeof Activity1IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/activity-2': typeof Activity2Route
  '/activity-1/$id': typeof Activity1IdRoute
  '/activity-1/': typeof Activity1IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/activity-2' | '/activity-1/$id' | '/activity-1'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/activity-2' | '/activity-1/$id' | '/activity-1'
  id: '__root__' | '/' | '/activity-2' | '/activity-1/$id' | '/activity-1/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Activity2Route: typeof Activity2Route
  Activity1IdRoute: typeof Activity1IdRoute
  Activity1IndexRoute: typeof Activity1IndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/activity-2': {
      id: '/activity-2'
      path: '/activity-2'
      fullPath: '/activity-2'
      preLoaderRoute: typeof Activity2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activity-1/': {
      id: '/activity-1/'
      path: '/activity-1'
      fullPath: '/activity-1'
      preLoaderRoute: typeof Activity1IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activity-1/$id': {
      id: '/activity-1/$id'
      path: '/activity-1/$id'
      fullPath: '/activity-1/$id'
      preLoaderRoute: typeof Activity1IdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Activity2Route: Activity2Route,
  Activity1IdRoute: Activity1IdRoute,
  Activity1IndexRoute: Activity1IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
